{"remainingRequest":"/app/appfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/appfront/src/components/wechat/dialogue.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/app/appfront/src/components/wechat/dialogue.vue","mtime":1608703131000},{"path":"/app/appfront/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/appfront/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/appfront/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/appfront/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/appfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/appfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi8uLi9hc3NldHMvbGVzcy9kaWFsb2d1ZS5sZXNzIjsKCi5zYXktYWN0aXZlIHsKICAgIGJhY2tncm91bmQ6ICNjNmM3Y2E7Cn0K"},{"version":3,"sources":["dialogue.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA;;AAEA;AACA;AACA","file":"dialogue.vue","sourceRoot":"src/components/wechat","sourcesContent":["<template>\n    <div class=\"dialogue\">\n        <header id=\"wx-header\">\n            <div class=\"other\">\n                <router-link :to=\"{path:'/wechat/dialogue/dialogue-info',query: { msgInfo: msgInfo}}\" tag=\"span\"\n                    class=\"iconfont icon-chat-group\" v-show=\"$route.query.group_num&&$route.query.group_num!=1\">\n                </router-link>\n                <router-link :to=\"{path:'/wechat/dialogue/dialogue-detail',query: { msgInfo: msgInfo}}\" tag=\"span\"\n                    class=\"iconfont icon-chat-friends\" v-show=\"$route.query.group_num==1\"></router-link>\n            </div>\n            <div class=\"center\">\n                <router-link to=\"/\" tag=\"div\" class=\"iconfont icon-return-arrow\">\n                    <span>微信</span>\n                </router-link>\n                <span>{{pageName}}</span>\n                <span class=\"parentheses\"\n                    v-show='$route.query.group_num&&$route.query.group_num!=1'>{{$route.query.group_num}}</span>\n            </div>\n        </header>\n        <section class=\"dialogue-section clearfix\" v-on:click=\"MenuOutsideClick\">\n            <div class=\"row clearfix\" v-for=\"(item,index) in msgInfo.msg\" :key=\"index\">\n                <img :src=\"item.headerUrl\" class=\"header\">\n                <p class=\"text\" v-more>{{item.text}}</p>\n            </div>\n            <span class=\"msg-more\" id=\"msg-more\">\n                <ul>\n                    <li>复制</li>\n                    <li>转发</li>\n                    <li>收藏</li>\n                    <li>删除</li>\n                </ul>\n            </span>\n        </section>\n        <footer class=\"dialogue-footer\">\n            <div class=\"component-dialogue-bar-person\">\n                <span class=\"iconfont icon-dialogue-jianpan\" v-show=\"!currentChatWay\"\n                    v-on:click=\"currentChatWay=true\"></span>\n                <span class=\"iconfont icon-dialogue-voice\" v-show=\"currentChatWay\"\n                    v-on:click=\"currentChatWay=false\"></span>\n                <div class=\"chat-way\" v-show=\"!currentChatWay\">\n                    <div class=\"chat-say\" v-press>\n                        <span class=\"one\">按住 说话</span>\n                        <span class=\"two\">松开 结束</span>\n                    </div>\n                </div>\n                <div class=\"chat-way\" v-show=\"currentChatWay\">\n                    <input class=\"chat-txt\" type=\"text\" v-on:focus=\"focusIpt\" v-on:blur=\"blurIpt\" />\n                </div>\n                <span class=\"expression iconfont icon-dialogue-smile\"></span>\n                <span class=\"more iconfont icon-dialogue-jia\"></span>\n                <div class=\"recording\" style=\"display: none;\" id=\"recording\">\n                    <div class=\"recording-voice\" style=\"display: none;\" id=\"recording-voice\">\n                        <div class=\"voice-inner\">\n                            <div class=\"voice-icon\"></div>\n                            <div class=\"voice-volume\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </div>\n                        </div>\n                        <p>手指上划,取消发送</p>\n                    </div>\n                    <div class=\"recording-cancel\" style=\"display: none;\">\n                        <div class=\"cancel-inner\"></div>\n                        <p>松开手指,取消发送</p>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                pageName: this.$route.query.name,\n                currentChatWay: true, //ture为键盘打字 false为语音输入\n                timer: null\n                // sayActive: false // false 键盘打字 true 语音输入\n            }\n        },\n        beforeRouteEnter(to, from, next) {\n            next(vm => {\n                vm.$store.commit(\"setPageName\", vm.$route.query.name)\n            })\n        },\n        computed: {\n            msgInfo() {\n                for (var i in this.$store.state.msgList.baseMsg) {\n                    if (this.$store.state.msgList.baseMsg[i].mid == this.$route.query.mid) {\n                        return this.$store.state.msgList.baseMsg[i]\n                    }\n                }\n                return {}\n            }\n        },\n        directives: {\n            press: {\n                inserted(element) {\n                    var recording = document.querySelector('.recording'),\n                        recordingVoice = document.querySelector('.recording-voice'),\n                        recordingCancel = document.querySelector('.recording-cancel'),\n                        // startTx,\n                        startTy\n\n                    element.addEventListener('touchstart', function (e) {\n                        // 用bind时，vue还没插入到dom,故dom获取为 undefine，用 inserted 代替 bind,也可以开个0秒的定时器\n                        element.className = \"chat-say say-active\"\n                        recording.style.display = recordingVoice.style.display = \"block\"\n                        var touches = e.touches[0]\n                        // startTx = touches.clientX\n                        startTy = touches.clientY\n                        e.preventDefault()\n                    }, false)\n                    element.addEventListener('touchend', function (e) {\n                        /*var touches = e.changedTouches[0];\n                        var distanceY = startTy - touches.clientY;\n                        if (distanceY > 50) {\n                            console.log(\"取消发送信息\");\n                        }else{\n                            console.log(\"发送信息\");\n                        }*/\n\n                        element.className = \"chat-say\"\n                        recordingCancel.style.display = recording.style.display = recordingVoice.style.display = \"none\"\n                        e.preventDefault()\n                    }, false)\n                    element.addEventListener('touchmove', function (e) {\n                        var touches = e.changedTouches[0],\n                            // endTx = touches.clientX,\n                            endTy = touches.clientY,\n                            // distanceX = startTx - endTx,\n                            distanceY = startTy - endTy;\n\n                        if (distanceY > 50) {\n                            element.className = \"chat-say\"\n                            recordingVoice.style.display = \"none\"\n                            recordingCancel.style.display = \"block\"\n                        } else {\n                            element.className = \"chat-say say-active\"\n                            recordingVoice.style.display = \"block\"\n                            recordingCancel.style.display = \"none\"\n                        }\n                        // 阻断事件冒泡 防止页面被一同向上滑动\n                        e.preventDefault()\n                    }, false);\n                }\n            },\n            more: {\n                bind(element) {\n                    var startTx, startTy\n                    element.addEventListener('touchstart', function (e) {\n                        var msgMore = document.getElementById('msg-more'),\n                            touches = e.touches[0];\n                        startTx = touches.clientX\n                        startTy = touches.clientY\n\n                        clearTimeout(this.timer)\n                        this.timer = setTimeout(() => {\n                            // 控制菜单的位置\n                            msgMore.style.left = ((startTx - 18) > 180 ? 180 : (startTx - 18)) + 'px'\n                            msgMore.style.top = (element.offsetTop - 33) + 'px'\n                            msgMore.style.display = \"block\"\n                            element.style.backgroundColor = '#e5e5e5'\n                        }, 500)\n\n                    }, false)\n                    element.addEventListener('touchmove', function (e) {\n                        var touches = e.changedTouches[0],\n                            disY = touches.clientY;\n                        if (Math.abs(disY - startTy) > 10) {\n                            clearTimeout(this.timer)\n                        }\n                    }, false)\n                    element.addEventListener('touchend', function () {\n                        clearTimeout(this.timer)\n                    }, false)\n                }\n            }\n        },\n        methods: {\n            // 解决输入法被激活时 底部输入框被遮住问题\n            focusIpt() {\n                this.timer = setInterval(function () {\n                    document.body.scrollTop = document.body.scrollHeight\n                }, 100)\n            },\n            blurIpt() {\n                clearInterval(this.timer)\n            },\n            // 点击空白区域，菜单被隐藏\n            MenuOutsideClick(e) {\n                var container = document.querySelectorAll('.text'),\n                    msgMore = document.getElementById('msg-more')\n                if (e.target.className !== 'text') {\n                    msgMore.style.display = 'none'\n                    container.forEach(item => item.style.backgroundColor = '#fff')\n                }\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    @import \"../../assets/less/dialogue.less\";\n\n    .say-active {\n        background: #c6c7ca;\n    }\n</style>"]}]}